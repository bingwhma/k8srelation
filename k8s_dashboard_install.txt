安装部署dashboard

安装部署dashboard
1.查看pod运行情况
[root@binghe101 ~]# kubectl get pods -A  -o wide

2.下载recommended.yaml文件
wget https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0/aio/deploy/recommended.yaml
1
3.修改recommended.yaml文件

vim recommended.yaml

需要修改的内容如下所示。

---
kind: Service
apiVersion: v1
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard
spec:
  type: NodePort #增加
  ports:
    - port: 443
      targetPort: 8443
      nodePort: 30000 #增加
  selector:
    k8s-app: kubernetes-dashboard
---
#因为自动生成的证书很多浏览器无法使用，所以我们自己创建，注释掉kubernetes-dashboard-certs对象声明
#apiVersion: v1
#kind: Secret
#metadata:
#  labels:
#    k8s-app: kubernetes-dashboard
#  name: kubernetes-dashboard-certs
#  namespace: kubernetes-dashboard
#type: Opaque
---

4.创建证书
mkdir dashboard-certs
cd dashboard-certs/
#创建命名空间
kubectl create namespace kubernetes-dashboard

# 创建key文件
openssl genrsa -out dashboard.key 2048

#证书请求
openssl req -days 36000 -new -out dashboard.csr -key dashboard.key -subj '/CN=dashboard-cert'

#自签证书
openssl x509 -req -in dashboard.csr -signkey dashboard.key -out dashboard.crt
#创建kubernetes-dashboard-certs对象
kubectl create secret generic kubernetes-dashboard-certs --from-file=dashboard.key --from-file=dashboard.crt -n kubernetes-dashboard


5.安装dashboard
kubectl create -f ~/recommended.yaml 

注意：这里可能会报如下所示。
Error from server (AlreadyExists): error when creating "./recommended.yaml": namespaces "kubernetes-dashboard" already exists
这是因为我们在创建证书时，已经创建了kubernetes-dashboard命名空间，所以，直接忽略此错误信息即可。

6.查看安装结果

[root@binghe101 ~]# kubectl get pods -A  -o wide
[root@binghe101 ~]# kubectl get service -n kubernetes-dashboard  -o wide


7.创建dashboard管理员

创建dashboard-admin.yaml文件。
vim dashboard-admin.yaml

文件的内容如下所示。

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: dashboard-admin
  namespace: kubernetes-dashboard

保存退出后执行如下命令创建管理员。
kubectl create -f ./dashboard-admin.yaml

8.为用户分配权限

创建dashboard-admin-bind-cluster-role.yaml文件。

vim dashboard-admin-bind-cluster-role.yaml
1
文件内容如下所示。

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dashboard-admin-bind-cluster-role
  labels:
    k8s-app: kubernetes-dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: dashboard-admin
  namespace: kubernetes-dashboard

保存退出后执行如下命令为用户分配权限。
kubectl create -f ./dashboard-admin-bind-cluster-role.yaml
1
9.查看并复制用户Token

在命令行执行如下命令。
kubectl -n kubernetes-dashboard describe secret $(kubectl -n kubernetes-dashboard get secret | grep dashboard-admin | awk '{print $1}')

具体执行情况如下所示。
[root@binghe101 ~]# kubectl -n kubernetes-dashboard describe secret $(kubectl -n kubernetes-dashboard get secret | grep dashboard-admin | awk '{print $1}')
Name:         dashboard-admin-token-sd95f
Namespace:    kubernetes-dashboard
Labels:       <none>
Annotations:  kubernetes.io/service-account.name: dashboard-admin
              kubernetes.io/service-account.uid: 20588290-96f9-4ea1-b9cf-b0e7b7aa039f

Type:  kubernetes.io/service-account-token

Data
====
ca.crt:     1025 bytes
namespace:  20 bytes
token:      eyJhbGciOiJSUzI1NiIsImtpZCI6ImRfVjQ4MUJ4aVVXVGdFc3ZTaTJ4U3pheVhSRUMtNElqZ1l3TldIX2hQMm8ifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlcm5ldGVzLWRhc2hib2FyZCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJkYXNoYm9hcmQtYWRtaW4tdG9rZW4tc2Q5NWYiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGFzaGJvYXJkLWFkbWluIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiMjA1ODgyOTAtOTZmOS00ZWExLWI5Y2YtYjBlN2I3YWEwMzlmIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50Omt1YmVybmV0ZXMtZGFzaGJvYXJkOmRhc2hib2FyZC1hZG1pbiJ9.kLBVyD8am0lKbcIWGz1cWJKWd3BsQ3fthqXz8LA7Mwurs3BQ1YCxrVlgJQy0NWdV6rVz_Dmpkx7uq5cJqpClK-gHELNy1htNzByqCFvZTbswmjbr1KXYP3vJi-pXnlP_8pfM22QX_YRoIrUGp7vLQl4peMpDRi1rVqh76_ImAiEInriJm2dQNpJX15yH4K5_UeAFfn92zfeSbFjAThs9OZrEBQ_i-g__SpB_zbFiIekMpF-6XhrSDGe-3F6YSDvTtPrB_Ffx-KWkWdAd7u_XDLqX7RZN2OXBHi7J0iOtg1vwFS2w7ykrD0REqJ_453U7m82NmIDNHDqVcmSlZPAZqQ
可以看到，此时的Token值为：

eyJhbGciOiJSUzI1NiIsImtpZCI6ImRfVjQ4MUJ4aVVXVGdFc3ZTaTJ4U3pheVhSRUMtNElqZ1l3TldIX2hQMm8ifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlcm5ldGVzLWRhc2hib2FyZCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJkYXNoYm9hcmQtYWRtaW4tdG9rZW4tc2Q5NWYiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGFzaGJvYXJkLWFkbWluIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiMjA1ODgyOTAtOTZmOS00ZWExLWI5Y2YtYjBlN2I3YWEwMzlmIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50Omt1YmVybmV0ZXMtZGFzaGJvYXJkOmRhc2hib2FyZC1hZG1pbiJ9.kLBVyD8am0lKbcIWGz1cWJKWd3BsQ3fthqXz8LA7Mwurs3BQ1YCxrVlgJQy0NWdV6rVz_Dmpkx7uq5cJqpClK-gHELNy1htNzByqCFvZTbswmjbr1KXYP3vJi-pXnlP_8pfM22QX_YRoIrUGp7vLQl4peMpDRi1rVqh76_ImAiEInriJm2dQNpJX15yH4K5_UeAFfn92zfeSbFjAThs9OZrEBQ_i-g__SpB_zbFiIekMpF-6XhrSDGe-3F6YSDvTtPrB_Ffx-KWkWdAd7u_XDLqX7RZN2OXBHi7J0iOtg1vwFS2w7ykrD0REqJ_453U7m82NmIDNHDqVcmSlZPAZqQ


查看dashboard界面
在浏览器中打开链接 https://hostip:30000，如下所示。